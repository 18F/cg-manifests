empty_hash: {}

networks: (( merge ))

meta:
  environment: ~

  app_domains: (( merge ))

  release:
    name: cf

  custom_release:
    name: 18f-cf

  consul_servers: (( jobs.consul_z1.networks.cf1.static_ips jobs.consul_z2.networks.cf2.static_ips ))

  networks:
    z1:
      apps: cf1

    z2:
      apps: cf2

  nfs_client_ranges:
    - (( .networks.cf1.subnets.[0].range || nil ))
    - (( .networks.cf2.subnets.[0].range || nil ))

  nfs_server:
    address: (( jobs.nfs_z1.networks.cf1.static_ips.[0] || nil ))
    allow_from_entries: (( merge || meta.nfs_client_ranges ))
    share: ~
    share_path: (( merge || "" ))

  api_routes:
  - name: api
    port: (( .properties.cc.external_port ))
    uris:
    - (( "api." .properties.domain ))

  api_templates:
  - name: cloud_controller_ng
    release: (( meta.release.name ))
  - name: routing-api
    release: (( meta.release.name ))
  - name: statsd-injector
    release: (( meta.release.name ))
  - name: consul_agent
    release: (( meta.release.name ))
  - name: nfs_mounter
    release: (( meta.release.name ))
  - name: route_registrar
    release: (( meta.release.name ))


  api_worker_templates:
  - name: cloud_controller_worker
    release: (( meta.release.name ))
  # - name: consul_agent
  #   release: (( meta.release.name ))

  clock_templates:
  - name: cloud_controller_clock
    release: (( meta.release.name ))

  nats_templates:
  - name: nats
    release: (( meta.release.name ))
  - name: nats_stream_forwarder
    release: (( meta.release.name ))

  dea_templates:
  - name: dea_next
    release: (( meta.release.name ))
  - name: dea_logging_agent
    release: (( meta.release.name ))

  router_templates:
  - name: secureproxy
    release: secureproxy
  - name: gorouter
    release: (( meta.release.name ))
  - name: consul_agent
    release: (( meta.release.name ))

  routing_api_templates:
  - name: routing-api
    release: (( meta.release.name ))
  - name: metron_agent
    release: (( meta.release.name ))
  - name: consul_agent
    release: (( meta.release.name ))

  etcd_templates:
  - name: etcd
    release: (( meta.release.name ))
  - name: etcd_metrics_server
    release: (( meta.release.name ))

  stats_templates:
  - name: collector
    release: (( meta.custom_release.name ))

  nfs_templates:
  - name: debian_nfs_server
    release: (( meta.release.name ))

  uaa_routes:
  - name: uaa
    port: (( .properties.uaa.port ))
    uris:
    - (( "uaa." .properties.domain ))
    - (( "*.uaa." .properties.domain ))
    - (( "login." .properties.domain ))
    - (( "*.login." .properties.domain ))

  uaa_templates:
  - name: uaa
    release: (( meta.custom_release.name ))
  - name: consul_agent
    release: (( meta.release.name ))
  - name: route_registrar
    release: (( meta.release.name ))

  login_templates:
  - name: login
    release: (( meta.release.name ))

  hm9000_routes:
  - name: hm9000
    port: 5155
    uris:
    - (( "hm9000." .properties.domain ))

  hm9000_templates:
  - name: hm9000
    release: (( meta.release.name ))
  - name: route_registrar
    release: (( meta.release.name ))

  loggregator_templates:
  - name: doppler
    release: (( meta.release.name ))
  - name: syslog_drain_binder
    release: (( meta.release.name ))
  - name: metron_agent
    release: (( meta.release.name ))

  loggregator_trafficcontroller_templates:
  - name: loggregator_trafficcontroller
    release: (( meta.release.name ))
  - name: metron_agent
    release: (( meta.release.name ))

  consul_templates:
  - name: consul_agent
    release: (( meta.release.name ))

  metron_agent_templates:
  - name: metron_agent
    release: (( meta.release.name ))

  hardening_templates:
  - name: harden
    release: fisma

  newrelic_templates:
  - name: newrelic-monitor
    release: newrelic



jobs:
  - name: consul_z1
    templates: (( merge || meta.consul_templates meta.metron_agent_templates meta.hardening_templates meta.newrelic_templates ))
    instances: 0
    persistent_disk: 1024
    resource_pool: medium_z1
    networks:
      - name: cf1
        static_ips: (( merge ))
    update:
      serial: true
      max_in_flight: 1
    properties:
      consul:
        agent:
          mode: server
      metron_agent:
        zone: z1

  - name: consul_z2
    templates: (( merge || meta.consul_templates  meta.metron_agent_templates meta.hardening_templates meta.newrelic_templates ))
    instances: 0
    persistent_disk: 1024
    resource_pool: medium_z2
    networks:
      - name: cf2
        static_ips: (( merge ))
    update:
      serial: true
      max_in_flight: 1
    properties:
      consul:
        agent:
          mode: server
      metron_agent:
        zone: z2

  - name: nats_z1
    templates: (( merge || meta.nats_templates meta.metron_agent_templates meta.hardening_templates meta.newrelic_templates ))
    instances: 1
    resource_pool: small_z1
    networks:
      - name: cf1
        static_ips: (( merge ))
    properties:
      metron_agent:
        zone: z1
    update: (( merge || empty_hash ))

  - name: nats_z2
    templates: (( merge || meta.nats_templates meta.metron_agent_templates meta.hardening_templates meta.newrelic_templates ))
    instances: 1
    resource_pool: small_z2
    networks:
      - name: cf2
        static_ips: (( merge ))
    properties:
      metron_agent:
        zone: z2
    update: (( merge || empty_hash ))

  - name: etcd_z1
    templates: (( merge || meta.etcd_templates meta.metron_agent_templates meta.hardening_templates meta.newrelic_templates ))
    instances: 1
    resource_pool: small_z1
    persistent_disk: 10024
    networks:
      - name: cf1
        static_ips: (( merge ))
    properties:
      metron_agent:
        zone: z1
    update: (( merge || empty_hash ))

  - name: etcd_z2
    templates: (( merge || meta.etcd_templates meta.metron_agent_templates meta.hardening_templates meta.newrelic_templates ))
    instances: 1
    resource_pool: small_z2
    persistent_disk: 10024
    networks:
      - name: cf2
        static_ips: (( merge ))
    properties:
      metron_agent:
        zone: z2
    update: (( merge || empty_hash ))

  - name: nfs_z1
    templates: (( merge || meta.nfs_templates meta.metron_agent_templates meta.hardening_templates meta.newrelic_templates ))
    instances: 0
    resource_pool: medium_z1
    persistent_disk: 102400
    networks:
      - name: cf1
        static_ips: ~
    properties:
      metron_agent:
        zone: z1
    update: (( merge || empty_hash ))

  - name: uaa_z1
    templates: (( merge || meta.uaa_templates meta.metron_agent_templates meta.hardening_templates meta.newrelic_templates ))
    instances: 1
    resource_pool: medium_z1
    networks:
      - name: cf1
    properties:
      consul:
        agent:
          services:
            uaa: {}
      metron_agent:
        zone: z1
      route_registrar:
        routes: (( merge || meta.uaa_routes ))
      router:
        servers:
          z1: (( jobs.router_z1.networks.cf1.static_ips ))
          z2: (( jobs.router_z2.networks.cf2.static_ips ))
    update: (( merge || empty_hash ))

  - name: uaa_z2
    templates: (( merge || meta.uaa_templates meta.metron_agent_templates meta.hardening_templates meta.newrelic_templates ))
    instances: 1
    resource_pool: medium_z2
    networks:
      - name: cf2
    properties:
      consul:
        agent:
          services:
            uaa: {}
      metron_agent:
        zone: z2
      route_registrar:
        routes: (( merge || meta.uaa_routes ))
      router:
        servers:
          z1: (( jobs.router_z1.networks.cf1.static_ips ))
          z2: (( jobs.router_z2.networks.cf2.static_ips ))
    update: (( merge || empty_hash ))

  - name: stats_z1
    templates: (( merge || meta.stats_templates meta.metron_agent_templates meta.hardening_templates meta.newrelic_templates ))
    instances: 1
    resource_pool: small_z1
    networks:
      - name: cf1
    properties:
      metron_agent:
        zone: z1
    update: (( merge || empty_hash ))

  - name: hm9000_z1
    templates: (( merge || meta.hm9000_templates meta.metron_agent_templates meta.hardening_templates meta.newrelic_templates ))
    instances: 1
    resource_pool: small_z1
    networks:
      - name: cf1
    properties:
      metron_agent:
        zone: z1
      route_registrar:
        routes: (( merge || meta.hm9000_routes ))
    update: (( merge || empty_hash ))

  - name: hm9000_z2
    templates: (( merge || meta.hm9000_templates meta.metron_agent_templates meta.hardening_templates meta.newrelic_templates ))
    instances: 1
    resource_pool: small_z2
    networks:
      - name: cf2
    properties:
      metron_agent:
        zone: z2
      route_registrar:
        routes: (( merge || meta.hm9000_routes ))
    update: (( merge || empty_hash ))

  - name: api_z1
    templates: (( merge || meta.api_templates meta.api_worker_templates meta.metron_agent_templates meta.hardening_templates meta.newrelic_templates ))
    instances: 2
    resource_pool: large_z1
    networks:
      - name: cf1
    properties:
      consul:
        agent:
          services:
            cloud_controller_ng: {}
            routing-api: {}
      metron_agent:
        zone: z1
      route_registrar:
        routes: (( merge || meta.api_routes ))
      nfs_server: (( meta.nfs_server ))
    update: (( merge || empty_hash ))

  - name: api_z2
    templates: (( merge || meta.api_templates meta.api_worker_templates meta.metron_agent_templates meta.hardening_templates meta.newrelic_templates ))
    instances: 2
    resource_pool: large_z2
    networks:
      - name: cf2
    properties:
      consul:
        agent:
          services:
            cloud_controller_ng: {}
            routing-api: {}
      metron_agent:
        zone: z2
      route_registrar:
        routes: (( merge || meta.api_routes ))
      nfs_server: (( meta.nfs_server ))
    update: (( merge || empty_hash ))

  - name: clock_global
    templates: (( merge || meta.clock_templates meta.metron_agent_templates meta.hardening_templates meta.newrelic_templates ))
    instances: 1
    resource_pool: small_z1
    persistent_disk: 0
    networks:
      - name: cf1
    properties:
      metron_agent:
        zone: z1
    update: (( merge || empty_hash ))

  - name: runner_z1
    templates: (( merge || meta.dea_templates meta.metron_agent_templates meta.hardening_templates meta.newrelic_templates ))
    instances: 5
    resource_pool: runner_z1
    networks:
      - name: cf1
        static_ips: ~
    properties:
      dea_next:
        zone: (( merge || "z1" ))
      metron_agent:
        zone: z1
    persistent_disk: 30000
    update:
      max_in_flight: 1

  - name: runner_z2
    templates: (( merge || meta.dea_templates meta.metron_agent_templates meta.hardening_templates meta.newrelic_templates ))
    instances: 5
    resource_pool: runner_z2
    networks:
      - name: cf2
        static_ips: ~
    properties:
      dea_next:
        zone: (( merge || "z2" ))
      metron_agent:
        zone: z2
    persistent_disk: 30000
    update:
      max_in_flight: 1

  - name: loggregator_z1
    templates: (( merge || meta.loggregator_templates meta.hardening_templates meta.newrelic_templates ))
    instances: 0
    resource_pool: small_z1
    networks:
      - name: cf1
    properties:
      doppler:
        zone: z1
      metron_agent:
        zone: z1
    update: (( merge || empty_hash ))

  - name: loggregator_z2
    templates: (( merge || meta.loggregator_templates meta.hardening_templates meta.newrelic_templates ))
    instances: 0
    resource_pool: small_z2
    networks:
      - name: cf2
    properties:
      doppler:
        zone: z2
      metron_agent:
        zone: z2
    update: (( merge || empty_hash ))

  - name: doppler_z1
    templates: (( merge || meta.loggregator_templates meta.hardening_templates meta.newrelic_templates ))
    instances: 1
    resource_pool: medium_z1
    networks:
      - name: cf1
    properties:
      doppler:
        zone: z1
      metron_agent:
        zone: z1
    update: (( merge || empty_hash ))

  - name: doppler_z2
    templates: (( merge || meta.loggregator_templates meta.hardening_templates meta.newrelic_templates ))
    instances: 1
    resource_pool: medium_z2
    networks:
      - name: cf2
    properties:
      doppler:
        zone: z2
      metron_agent:
        zone: z2
    update: (( merge || empty_hash ))

  - name: loggregator_trafficcontroller_z1
    templates: (( merge || meta.loggregator_trafficcontroller_templates meta.hardening_templates meta.newrelic_templates ))
    instances: 1
    resource_pool: small_z1
    networks:
      - name: cf1
    properties:
      metron_agent:
        zone: z1
      traffic_controller:
        zone: z1
    update: (( merge || empty_hash ))

  - name: loggregator_trafficcontroller_z2
    templates: (( merge || meta.loggregator_trafficcontroller_templates meta.hardening_templates meta.newrelic_templates ))
    instances: 1
    resource_pool: small_z2
    networks:
      - name: cf2
    properties:
      metron_agent:
        zone: z2
      traffic_controller:
        zone: z2
    update: (( merge || empty_hash ))

  - name: router_z1
    templates: (( merge || meta.router_templates meta.metron_agent_templates meta.hardening_templates meta.newrelic_templates ))
    instances: 2
    resource_pool: router_z1
    networks:
      - name: cf1
        static_ips: (( merge ))
    properties:
      consul:
        agent:
          services:
            gorouter: {}
      metron_agent:
        zone: z1
    update: (( merge || empty_hash ))

  - name: router_z2
    templates: (( merge || meta.router_templates meta.metron_agent_templates meta.hardening_templates meta.newrelic_templates ))
    instances: 1
    resource_pool: router_z2
    networks:
      - name: cf2
        static_ips: (( merge ))
    properties:
      consul:
        agent:
          services:
            gorouter: {}
      metron_agent:
        zone: z2
    update: (( merge || empty_hash ))

  - name: routing_api_z1
    instances: 0
    networks:
    - name: cf1
      static_ips: (( merge ))
    resource_pool: medium_z1
    templates: (( merge || meta.routing_api_templates ))
    properties:
      consul:
        agent:
          services:
            routing-api: {}
      metron_agent:
        zone: z1
    update: (( merge || empty_hash ))

  - name: routing_api_z2
    instances: 0
    networks:
    - name: cf2
      static_ips: (( merge ))
    resource_pool: medium_z2
    templates: (( merge || meta.routing_api_templates ))
    properties:
      consul:
        agent:
          services:
            routing-api: {}
      metron_agent:
        zone: z2
    update: (( merge || empty_hash ))

  - name: acceptance_tests
    templates:
    - name: acceptance-tests
      release: (( meta.release.name ))
    instances: 1
    resource_pool: small_errand
    lifecycle: errand
    networks:
      - name: cf1

  - name: smoke_tests
    templates:
    - name: smoke-tests
      release: (( meta.release.name ))
    instances: 1
    resource_pool: small_errand
    lifecycle: errand
    networks:
      - name: cf1
    properties: {}

properties:
  <<: (( merge ))
  consul:
    agent:
      log_level: (( merge || nil ))
      servers:
        lan: (( meta.consul_servers ))
    ca_cert: ""
    agent_cert: ""
    agent_key: ""
    encrypt_keys: (( merge || [] ))
    require_ssl: false
    server_cert: ""
    server_key: ""


  dropsonde:
    enabled: true

  support_address: (( merge || "https://docs.cloud.gov" ))
  description: (( merge || "cloud.gov Cloud Foundry" ))
  domain: (( merge ))
  ssl:
    skip_cert_verify: (( merge || false ))
  system_domain: (( domain ))
  system_domain_organization: ~
  app_domains: (( meta.app_domains ))

  disk_quota_enabled: true

  request_timeout_in_seconds: 900

  nats:
    user: (( merge ))
    password: (( merge ))
    address: (( jobs.nats_z1.networks.cf1.static_ips.[0] ))
    port: 4222
    machines: (( jobs.nats_z1.networks.cf1.static_ips jobs.nats_z2.networks.cf2.static_ips ))
    debug: false
    trace: false
    monitor_port: 0
    prof_port: 0

  etcd:
    machines: (( jobs.etcd_z1.networks.cf1.static_ips jobs.etcd_z2.networks.cf2.static_ips ))
    peer_require_ssl: false
    require_ssl: false

  etcd_metrics_server:
    nats:
      machines: (( .properties.nats.machines ))
      username: (( .properties.nats.user ))
      password: (( .properties.nats.password ))

  dea_next:
    memory_mb: (( merge ))
    memory_overcommit_factor: 10
    disk_mb: (( merge ))
    disk_overcommit_factor: 10
    staging_disk_inode_limit: 200000
    instance_disk_inode_limit: 200000
    deny_networks: (( merge || [] ))
    allow_networks: (( merge || [] ))
    kernel_network_tuning_enabled: true
    directory_server_protocol: https
    evacuation_bail_out_time_in_seconds: 600
    logging_level: info
    staging_disk_limit_mb: 4096
    staging_memory_limit_mb: 2048
    default_health_check_timeout: 60
    advertise_interval_in_seconds: 5
    heartbeat_interval_in_seconds: 10
    rlimit_core: (( merge || 0 ))
    allow_host_access: ~

  loggregator:
    <<: (( merge ))
    etcd:
      machines: (( .properties.etcd.machines ))

  loggregator_endpoint:
    shared_secret: (( merge ))

  doppler_endpoint:
    shared_secret: (( .properties.loggregator_endpoint.shared_secret ))

  metron_endpoint:
    shared_secret: (( .properties.loggregator_endpoint.shared_secret ))

  logger_endpoint: ~

  cc: (( merge ))
  ccdb: (( merge ))

  hm9000: (( merge ))

  uaa: (( merge ))
  uaadb: (( merge ))

  databases: ~

  login: (( merge ))

  router:
    enable_ssl: (( merge || nil ))
    ssl_cert: (( merge || nil ))
    ssl_key: (( merge || nil ))
    cipher_suites: (( merge || nil ))
    requested_route_registration_interval_in_seconds: 20
    port: 85
    logrotate:
      freq_min: 20
      rotate: 5
      size: 3M
    extra_headers_to_log: null
    require_https: ~
    status:
      user: (( merge ))
      password: (( merge ))
    secure_cookies: false
    route_service_secrets: (( merge || nil ))
    route_service_timeout: (( merge || nil ))
    logrotate: (( merge || nil ))
    extra_headers_to_log: (( merge || nil ))

  secureproxy:
    listen_port: 80
    proxy_port: 85

  syslog_daemon_config: ~

  nfs_server: (( meta.nfs_server ))

  collector: (( merge || nil ))

  acceptance_tests: (( merge || nil ))

  smoke_tests: (( merge || nil ))
