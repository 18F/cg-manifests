---
name: concourse

# Meta property overrides
meta:
  az: ~
  atc:
    external_url: ~
    db:
      name: ~
      user: ~
      pass: ~
    basic_auth:
      user: ~
      pass: ~
    github_auth:
      authorize: ~
      client_id: ~
      client_secret: ~
  network:
    range: ~
    reserved: ~
    dns: ~
    gateway: ~
    discovery_ip: ~
    subnet: ~
    security_groups: ~
  disk:
    database:
      size: ~
      type: ~
  resources:
    web:
      instance_type: ~
      elbs: ~
    discovery:
      instance_type: ~
    databases:
      instance_type: ~
    workers:
      instance_type: ~
  compilation:
    instance_type: ~
    disk:
      size: ~
      type: ~

# replace with bosh status --uuid
director_uuid: (( merge ))

# pick a sane db name and password
atc_db_name: &atc-db-name (( meta.atc.db.name ))
atc_db_role: &atc-db-role
  name: (( meta.atc.db.user ))
  password: (( meta.atc.db.pass ))

# replace with an AZ from your account
availability_zone: &az (( meta.az ))

# replace all addresses with your VPC range
#
# e.g. X.X.0.2 -> 10.0.0.2
networks:
  - name: concourse
    type: manual
    subnets:
      - range: (( meta.network.range ))
        reserved: (( meta.network.reserved ))
        gateway: (( meta.network.gateway ))
        dns: (( meta.network.dns ))
        static:
          - &discovery_static_ip (( meta.network.discovery_ip ))
        cloud_properties:
          security_groups: (( meta.network.security_groups ))
          subnet: (( meta.network.subnet ))

releases:
  - name: concourse
    version: latest
  - name: garden-linux
    version: latest
  - name: slack-notification-resource
    version: latest

jobs:
  - name: discovery
    instances: 1
    resource_pool: discovery
    persistent_disk: 1024
    templates:
      - {release: concourse, name: consul-agent}
    networks:
      - name: concourse
        static_ips: [*discovery_static_ip]
    properties:
      consul:
        agent:
          mode: server

  - name: web
    instances: 1
    resource_pool: web
    templates:
      - {release: concourse, name: consul-agent}
      - {release: concourse, name: tsa}
      - {release: concourse, name: atc}
    networks: [{name: concourse}]
    properties:
      atc:
        web_bind_port: 8080
        external_url: (( meta.atc.external_url ))
        basic_auth_username: (( meta.atc.basic_auth.user ))
        basic_auth_password: (( meta.atc.basic_auth.pass ))
        github_auth:
          authorize: (( meta.atc.github_auth.authorize ))
          client_id: (( meta.atc.github_auth.client_id ))
          client_secret: (( meta.atc.github_auth.client_secret ))
        postgresql:
          database: *atc-db-name
          role: *atc-db-role
      consul:
        agent:
          servers: {lan: [*discovery_static_ip]}

  - name: db
    instances: 1
    resource_pool: databases
    persistent_disk_pool: database
    templates:
      - {release: concourse, name: consul-agent}
      - {release: concourse, name: postgresql}
    networks: [{name: concourse}]
    properties:
      postgresql:
        databases: [{name: *atc-db-name}]
        roles: [*atc-db-role]
      consul:
        agent:
          servers: {lan: [*discovery_static_ip]}

  - name: worker
    instances: 1
    resource_pool: workers
    templates:
      - {release: concourse, name: consul-agent}
      - {release: concourse, name: groundcrew}
      - {release: concourse, name: baggageclaim}
      - {release: garden-linux, name: garden}
      - {release: slack-notification-resource, name: just_install_packages}
    networks: [{name: concourse}]
    properties:
      garden:
        listen_network: tcp
        listen_address: 0.0.0.0:7777
        enable_graph_cleanup: true
        default_container_grace_time: 10m
        max_containers: 30
      consul:
        agent:
          servers: {lan: [*discovery_static_ip]}
      groundcrew:
        resource_types:
          - type: archive
            image: /var/vcap/packages/archive_resource
          - type: cf
            image: /var/vcap/packages/cf_resource
          - type: docker-image
            image: /var/vcap/packages/docker_image_resource
          - type: git
            image: /var/vcap/packages/git_resource
          - type: s3
            image: /var/vcap/packages/s3_resource
          - type: semver
            image: /var/vcap/packages/semver_resource
          - type: time
            image: /var/vcap/packages/time_resource
          - type: tracker
            image: /var/vcap/packages/tracker_resource
          - type: pool
            image: /var/vcap/packages/pool_resource
          - type: vagrant-cloud
            image: /var/vcap/packages/vagrant_cloud_resource
          - type: github-release
            image: /var/vcap/packages/github_release_resource
          - type: bosh-io-release
            image: /var/vcap/packages/bosh_io_release_resource
          - type: bosh-io-stemcell
            image: /var/vcap/packages/bosh_io_stemcell_resource
          - type: bosh-deployment
            image: docker:///awebb/bosh-deployment-resource
        additional_resource_types:
          - type: slack-notification
            image: /var/vcap/packages/slack-notification-resource
disk_pools:
  - name: database
    disk_size: (( meta.disk.database.size ))
    cloud_properties:
      type: (( meta.disk.database.type ))

resource_pools:
  - name: web
    network: concourse
    stemcell: &stemcell
      name: bosh-aws-xen-hvm-ubuntu-trusty-go_agent
      version: latest
    cloud_properties:
      availability_zone: *az
      instance_type: (( meta.resources.web.instance_type ))
      elbs: (( meta.resources.web.elbs ))
      ephemeral_disk:
        size: 30000
        type: gp2

  - name: discovery
    network: concourse
    stemcell: *stemcell
    cloud_properties:
      availability_zone: *az
      instance_type: (( meta.resources.discovery.instance_type ))
      ephemeral_disk:
        size: 100000
        type: gp2

  - name: databases
    network: concourse
    stemcell: *stemcell
    cloud_properties:
      availability_zone: *az
      instance_type: (( meta.resources.databases.instance_type ))
      ephemeral_disk:
        size: 30000
        type: gp2

  - name: workers
    network: concourse
    stemcell: *stemcell
    cloud_properties:
      availability_zone: *az
      instance_type: (( meta.resources.workers.instance_type ))
      ephemeral_disk:
        size: 30000
        type: gp2

compilation:
  workers: 3
  network: concourse
  reuse_compilation_vms: true
  cloud_properties:
    availability_zone: *az
    instance_type: (( meta.compilation.instance_type ))
    ephemeral_disk:
      size: (( meta.compilation.disk.size ))
      type: (( meta.compilation.disk.type ))

update:
  canaries: 1
  max_in_flight: 1
  serial: false
  canary_watch_time: 1000-60000
  update_watch_time: 1000-60000
