{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Infrastructure components for a Concourse deployment with an ELB and MultiAZ RDS instance.",
  "Parameters": {
    "ConcourseVPC": {
      "Description": "VPC ID to use for the Concourse system.",
      "Type": "AWS::EC2::VPC::Id"
    },
    "ConcourseSubnetCIDR": {
      "Description": "CIDR block for the Concourse subnet.",
      "Type": "String",
      "Default": "10.9.10.0/24"
    },
    "ConcourseSubnetAZ": {
      "Description": "Availability Zone of the Concourse subnet.",
      "Type": "AWS::EC2::AvailabilityZone::Name",
      "Default": "us-east-1b"
    },
    "ConcourseRouteTable": {
      "Description": "Route Table ID for the Concourse Subnet.",
      "Type": "String",
      "Default": ""
    },
    "HostedZoneName": {
      "Description": "(Optional) Route53 Hosted Zone in which to register the ELB's DNS record.",
      "Type": "String",
      "Default": ""
    },
    "ELBRecordSetName": {
      "Description": "(Optional) Route53 Record Set name for the ELB.",
      "Type": "String",
      "Default": ""
    },
    "LoadBalancerSubnet": {
      "Description": "Subnet ID to use for the ELB.",
      "Type": "AWS::EC2::Subnet::Id"
    },
    "LoadBalancerCertName": {
      "Description": "Name of the SSL cert to use for the ELB.",
      "Type": "String",
      "Default": ""
    },
    "WebSecurityGroup": {
      "Description": "SecurityGroup to use for the ELB.",
      "Type": "AWS::EC2::SecurityGroup::Id"
    },
    "RDSSecurityGroup": {
      "Description": "SecurityGroup ID to use for the RDS database.",
      "Type": "AWS::EC2::SecurityGroup::Id"
    },
    "RDSSubnetA": {
      "Description": "Subnet ID to use for the first RDS AZ.",
      "Type": "AWS::EC2::Subnet::Id"
    },
    "RDSSubnetB": {
      "Description": "Subnet ID to use for the second RDS AZ.",
      "Type": "AWS::EC2::Subnet::Id"
    },
    "DBName": {
      "Default": "atc",
      "Description" : "Postgres database name",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "64",
      "AllowedPattern" : "[a-zA-Z][a-zA-Z0-9]*",
      "ConstraintDescription" : "must begin with a letter and contain only alphanumeric characters."
    },
    "DBUsername": {
      "NoEcho": "true",
      "Default": "atc",
      "Description" : "Username for database access",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "16",
      "AllowedPattern" : "[a-zA-Z][a-zA-Z0-9]*",
      "ConstraintDescription" : "must begin with a letter and contain only alphanumeric characters."
    },
    "DBPassword": {
      "NoEcho": "true",
      "Description" : "Password for database access",
      "Type": "String",
      "MinLength": "8",
      "MaxLength": "41",
      "AllowedPattern" : "[a-zA-Z0-9]*",
      "ConstraintDescription" : "must contain only alphanumeric characters."
    },
    "DBAllocatedStorage": {
      "Default": "10",
      "Description" : "The size of the database (Gb)",
      "Type": "Number",
      "MinValue": "5",
      "MaxValue": "1024",
      "ConstraintDescription" : "must be between 5 and 1024Gb."
    }
  },
  "Conditions": {
    "CreateRecordSet": {
      "Fn::And": [
        {
          "Fn::Not": [
            { "Fn::Equals": [{ "Ref": "HostedZoneName" }, ""] }
          ]
        },
        {
          "Fn::Not": [
            { "Fn::Equals": [{ "Ref": "ELBRecordSetName" }, ""] }
          ]
        }
      ]
    }
  },
  "Resources": {
    "ConcourseSecurityGroup" : {
     "Type": "AWS::EC2::SecurityGroup",
     "Properties":
     {
      "GroupDescription": "Enable Auxillary HTTP access (needed for Concourse)",
      "SecurityGroupIngress": [
        {
          "IpProtocol": "tcp",
          "FromPort": "8080",
          "ToPort": "8080",
          "CidrIp": "0.0.0.0/0"
        }
      ],
      "VpcId": { "Ref" : "ConcourseVPC" }
     }
    },
    "ConcourseSubnet": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": { "Ref": "ConcourseVPC" },
        "AvailabilityZone" : { "Ref": "ConcourseSubnetAZ" },
        "CidrBlock": { "Ref": "ConcourseSubnetCIDR" },
        "Tags": [{ "Key": "Name", "Value": "Concourse" }]
      }
    },
    "ConcourseSubnetRouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": { "Ref": "ConcourseRouteTable" },
        "SubnetId": { "Ref": "ConcourseSubnet" }
      }
    },
    "ConcourseELBLoadBalancer": {
      "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
      "Properties": {
        "Subnets": [{ "Ref": "LoadBalancerSubnet" }],
        "SecurityGroups": [{ "Ref": "WebSecurityGroup" }],
        "HealthCheck": {
          "HealthyThreshold": "2",
          "Interval": "30",
          "Target": "tcp:8080",
          "Timeout": "5",
          "UnhealthyThreshold": "10"
        },
        "Listeners": [
          {
            "Protocol": "tcp",
            "LoadBalancerPort": "80",
            "InstanceProtocol": "tcp",
            "InstancePort": "8080"
          },
          {
            "Protocol": "tcp",
            "LoadBalancerPort": "2222",
            "InstanceProtocol": "tcp",
            "InstancePort": "2222"
          },
          {
            "Protocol" : "ssl",
            "LoadBalancerPort" : "443",
            "InstanceProtocol": "tcp",
            "InstancePort" : "8080",
            "SSLCertificateId" : {
              "Fn::Join":[
                "",
                [
                  "arn:aws:iam::",
                  {
                    "Ref":"AWS::AccountId"
                  },
                  ":server-certificate/",
                  {
                    "Ref":"LoadBalancerCertName"
                  }
                ]
              ]
            }
          }
        ]
      }
    },
    "ConcourseELBRecordSet": {
      "Type": "AWS::Route53::RecordSetGroup",
      "Condition": "CreateRecordSet",
      "Properties": {
        "HostedZoneName": { "Ref": "HostedZoneName" },
        "RecordSets": [
          {
            "Name": { "Ref": "ELBRecordSetName" },
            "Type": "A",
            "AliasTarget": {
              "HostedZoneId": {
                "Fn::GetAtt": [
                  "ConcourseELBLoadBalancer",
                  "CanonicalHostedZoneNameID"
                ]
              },
              "DNSName": {
                "Fn::GetAtt": [
                  "ConcourseELBLoadBalancer",
                  "CanonicalHostedZoneName"
                ]
              }
            }
          }
        ]
      }
    },
    "DBSubnetGroup": {
      "Type": "AWS::RDS::DBSubnetGroup",
      "Properties": {
        "DBSubnetGroupDescription": "RDS Subnets",
        "SubnetIds": [
          { "Ref": "RDSSubnetA" },
          { "Ref": "RDSSubnetB" }
        ]
      }
    },
    "RDS": {
      "Type": "AWS::RDS::DBInstance",
      "Properties": {
        "Engine" : "Postgres",
        "DBName" : { "Ref": "DBName" },
        "MultiAZ" : "true",
        "MasterUsername": { "Ref": "DBUsername" },
        "MasterUserPassword": { "Ref" : "DBPassword" },
        "DBInstanceClass": "db.t2.medium",
        "AllocatedStorage": { "Ref" : "DBAllocatedStorage" },
        "DBSubnetGroupName": { "Ref" : "DBSubnetGroup" },
        "VPCSecurityGroups": [
          { "Ref" : "RDSSecurityGroup" }
        ]
      }
    }
  },
  "Outputs" : {
    "RDSUrl" : {
      "Value" : { "Fn::GetAtt" : [ "RDS", "Endpoint.Address" ]},
      "Description" : "RDS Endpoint"
    }
  }
}